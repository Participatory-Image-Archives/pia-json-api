openapi: 3.0.2
info:
  title: PIA JSON Data API
  version: 1.0

servers:
  - url: https://data.participatory-archives.ch/api/v1

x-tagGroups:
  - name: Routes
    tags:
      - agents

paths:
  /agents:
    get:
      description: List Agents
      tags:
        - agents
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
      operationId: listAgents
      responses:
        '200':
          description: A list of agents
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                      $ref: '#/components/schemas/pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Agent'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /agents/{id}:
    parameters:
      - $ref: '#/components/parameters/item_id'
    get:
      description: View Agent
      tags:
        - agents
      operationId: getAgent
      responses:
        '200':
          description: Returns single agent
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                  data:
                    $ref: '#/components/schemas/Agent'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /albums:
    get:
      description: List Albums
      tags:
        - albums
      operationId: listAlbums
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
      responses:
        '200':
          description: A list of albums
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                      $ref: '#/components/schemas/pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Album'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /albums/{id}:
    parameters:
      - $ref: '#/components/parameters/item_id'
    get:
      description: View Album
      tags:
        - albums
      operationId: getAlbum
      responses:
        '200':
          description: Returns single album
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                  data:
                    $ref: '#/components/schemas/Album'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /collections:
    get:
      description: List Collections
      tags:
        - collections
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
      operationId: listCollections
      responses:
        '200':
          description: A list of collections
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                      $ref: '#/components/schemas/pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Collection'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /collections/{id}:
    parameters:
      - $ref: '#/components/parameters/item_id'
    get:
      description: View collection
      tags:
        - collections
      operationId: getCollection
      responses:
        '200':
          description: Returns single collection
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                  data:
                    $ref: '#/components/schemas/Collection'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /comments:
    get:
      description: List comments
      tags:
        - comments
      operationId: listComments
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
      responses:
        '200':
          description: A list of collections
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                      $ref: '#/components/schemas/pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /comments/{id}:
    parameters:
      - $ref: '#/components/parameters/item_id'
    get:
      description: View comment
      tags:
        - comments
      operationId: getComment
      responses:
        '200':
          description: Returns single comment
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                  data:
                    $ref: '#/components/schemas/Comment'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /documents:
    get:
      description: List documents
      tags:
        - comments
      operationId: listDocuments
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
      responses:
        '200':
          description: A list of collections
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                      $ref: '#/components/schemas/pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /documents/{id}:
    parameters:
      - $ref: '#/components/parameters/item_id'
    get:
      description: View document
      tags:
        - documents
      operationId: getDocument
      responses:
        '200':
          description: Returns single comment
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                  data:
                    $ref: '#/components/schemas/Document'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'


  /places:
    get:
      description: List Places
      tags:
        - places
      parameters:
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/page_number'
      operationId: listPlaces
      responses:
        '200':
          description: A list of places
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                      $ref: '#/components/schemas/pagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Place'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'

  /places/{id}:
    parameters:
      - $ref: '#/components/parameters/item_id'
    get:
      description: View Place
      tags:
        - places
      operationId: getPlace
      responses:
        '200':
          description: Returns single place
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  jsonapi:
                    $ref: '#/components/schemas/jsonapi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/link'
                  data:
                    $ref: '#/components/schemas/Place'
                  included:
                    type: array
                    uniqueItems: true
                    items:
                      $ref: '#/components/schemas/resource'


components:
  parameters:
    page_size:
      in: query
      name: page[size]
      required: false
      schema:
        type: integer
        minimum: 0
      description: How many results should load per page
    page_number:
      in: query
      name: page[number]
      required: false
      schema:
        type: integer
        minimum: 0
      description: Which page of the pagination should be displayed
    item_id:
      name: id
      in: path
      required: true
      description: the agent id 
      schema:
        type: string

  schemas:
    jsonapi:
      type: object
      description: The server's implementation
      properties:
        version:
          type: string
        meta:
          $ref: '#/components/schemas/meta'
      additionalProperties: false
    resource:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        attributes:
          type: object
        relationships:
          type: object
        links:
          $ref: '#/components/schemas/links'
        meta:
          $ref: '#/components/schemas/meta'
    link:
      oneOf:
      - description: a string containing the link's URL
        type: string
        format: uri-reference
      - type: object
        required:
        - href
        properties:
          href:
            description: a string containing the link's URL
            type: string
            format: uri-reference
          meta:
            $ref: '#/components/schemas/meta'
    links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/link'
    reltoone:
      description: a singular 'to-one' relationship
      type: object
      properties:
        links:
          $ref: '#/components/schemas/relationshipLinks'
            #        data:
            #          $ref: '#/components/schemas/relationshipToOne'
            #        meta:
            #          $ref: '#/components/schemas/meta'
    relationshipToOne:
      description: reference to other resource in a to-one relationship
      anyOf:
      - $ref: '#/components/schemas/nulltype'
      - $ref: '#/components/schemas/linkage'
    reltomany:
      description: a multiple 'to-many' relationship
      type: object
      properties:
        links:
          $ref: '#/components/schemas/relationshipLinks'
            #        data:
            #          $ref: '#/components/schemas/relationshipToMany'
            #        meta:
            #          $ref: '#/components/schemas/meta'
    relationshipLinks:
      description: optional references to other resource objects
      type: object
        #      additionalProperties: true
      properties:
        self:
          $ref: '#/components/schemas/link'
        related:
          $ref: '#/components/schemas/link'
    relationshipToMany:
      description: An array of objects each containing the 'type' and 'id' for to-many
        relationships
      type: array
      items:
        $ref: '#/components/schemas/linkage'
      uniqueItems: true
    linkage:
      type: object
      description: the 'type' and 'id'
      required:
      - type
      - id
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        meta:
          $ref: '#/components/schemas/meta'
    pagination:
      type: object
      properties:
        currentPage:
          $ref: '#/components/schemas/pageref'
        from:
          $ref: '#/components/schemas/pageref'
        lastPage:
          $ref: '#/components/schemas/pageref'
        perPage:
          $ref: '#/components/schemas/pageref'
        to:
          $ref: '#/components/schemas/pageref'
        total:
          $ref: '#/components/schemas/pageref'
    pageref:
      type: integer
    meta:
      type: object
      additionalProperties: true
    nulltype:
      type: string
      nullable: true
      default: null
    type:
      type: string
      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
        is used to describe resource objects that share common attributes and
        relationships.
    id:
      type: string
      description: "Each resource object\u2019s type and id pair MUST [identify](https://jsonapi.org/format/#document-resource-object-identification)\
        \ a single, unique resource."

    Agent:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        attributes:
          title: Agent attributes
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
            name:
              type: string
            family:
              type: string
            description:
              type: string
        relationships:
          title: Agent relationships
          type: object
          properties:
            birthdate:
              $ref: '#/components/schemas/reltoone'
            birthplace:
              $ref: '#/components/schemas/reltoone'
            deathdate:
              $ref: '#/components/schemas/reltoone'
            deathplace:
              $ref: '#/components/schemas/reltoone'
            images:
              $ref: '#/components/schemas/reltomany'
            albums:
              $ref: '#/components/schemas/reltomany'
            collections:
              $ref: '#/components/schemas/reltomany'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'

    Album:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        attributes:
          title: Album attributes
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
            label:
              type: string
            signature:
              type: string
            description:
              type: string
        relationships:
          title: Album relationships
          type: object
          properties:
            date:
              $ref: '#/components/schemas/reltoone'
            images:
              $ref: '#/components/schemas/reltomany'
            collections:
              $ref: '#/components/schemas/reltomany'
            comments:
              $ref: '#/components/schemas/reltomany'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'

    Collection:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        attributes:
          title: Collection attributes
          type: object
          properties:
            id:
              type: integer
            label:
              type: string
            signature:
              type: string
            description:
              type: string
            creator:
              type: string
            origin:
              type: string
        relationships:
          title: Collection relationships
          type: object
          properties:
            altLabels:
              $ref: '#/components/schemas/reltomany'
            date:
              $ref: '#/components/schemas/reltoone'
            agents:
              $ref: '#/components/schemas/reltomany'
            literatures:
              $ref: '#/components/schemas/reltomany'
            comments:
              $ref: '#/components/schemas/reltomany'
            images:
              $ref: '#/components/schemas/reltomany'
            documents:
              $ref: '#/components/schemas/reltomany'
            notes:
              $ref: '#/components/schemas/reltomany'
            maps:
              $ref: '#/components/schemas/reltomany'
            calls:
              $ref: '#/components/schemas/reltomany'
            keywords:
              $ref: '#/components/schemas/reltomany'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
              
    Comment:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        attributes:
          title: Comment attributes
          type: object
          properties:
            id:
              type: integer
            comment:
              type: string
        relationships:
          title: Comment relationships
          type: object
          properties:
            image:
              $ref: '#/components/schemas/reltoone'
            collection:
              $ref: '#/components/schemas/reltoone'
            album:
              $ref: '#/components/schemas/reltoone'
            agent:
              $ref: '#/components/schemas/reltoone'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'

    Document:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        attributes:
          title: Document attributes
          type: object
          properties:
            id:
              type: integer
            label:
              type: string
            comment:
              type: string
            file_name:
              type: string
            original_file_name:
              type: string
            base_path:
              type: string
        relationships:
          title: Document relationships
          type: object
          properties:
            aggregations:
              $ref: '#/components/schemas/reltomany'
            collections:
              $ref: '#/components/schemas/reltomany'
            maps:
              $ref: '#/components/schemas/reltomany'
            map-entries:
              $ref: '#/components/schemas/reltomany'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'

    Place:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        attributes:
          title: Place attributes
          type: object
          properties:
            id:
              type: integer
            label:
              type: string
            origin:
              type: string
            geometry:
              type: string
            latitude:
              type: number
              format: float
            longitude:
              type: number
              format: float
            geoname_id:
              type: string
            geoname_url:
              type: string
            geoname_code:
              type: string
            geoname_code_name:
              type: string
            geonames_division_level:
              type: string
            wiki_uri:
              type: string
        relationships:
          title: Place relationships
          type: object
          properties:
            images:
              $ref: '#/components/schemas/reltomany'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'

